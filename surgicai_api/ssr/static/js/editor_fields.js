(function(){let C=null,y=!1;function E(){const t=I();if(!t){console.warn("No Quill instance found for field initialization");return}C=t,isFieldsActive=!0,console.log("Fields functionality initialized successfully"),console.log("Quill instance:",t)}function I(){let t=window.quill;if(!t&&window.Quill){const o=document.getElementById("editor");o&&o.__quill&&(t=o.__quill)}return t}function q(){const t=C;if(!t)return;if(y){console.log("Already applying styling, skipping...");return}y=!0,console.log("Applying field styling...");const o=t.container.querySelector(".ql-editor");if(!o){console.log("No editor element found"),y=!1;return}const l=t.getSelection(),r=t.hasFocus();let s=null;if(l&&r){const n=window.getSelection();n.rangeCount>0&&(s=n.getRangeAt(0).cloneRange())}const a=document.createTreeWalker(o,NodeFilter.SHOW_TEXT,null,!1),u=[];let p;for(;p=a.nextNode();)/\[(ai)?field:\s*([^\]]+)\]([\s\S]*?)\[\/(?:\1)?field\]/.test(p.textContent)&&u.push(p);if(u.length===0){y=!1;return}u.forEach(n=>{const m=n.textContent,d=/\[(ai)?field:\s*([^\]]+)\]([\s\S]*?)\[\/(?:\1)?field\]/g;let e;const i=[];for(;(e=d.exec(m))!==null;)i.push({fullMatch:e[0],fieldName:e[2].trim(),content:e[3],isAIField:e[1]==="ai",startIndex:e.index,endIndex:e.index+e[0].length});if(i.length>0){const c=n.parentNode;let f=m,N=0;i.forEach(h=>{const v=document.createElement("div");v.innerHTML=h.isAIField?L(h.fieldName,h.content):k(h.fieldName,h.content);const F=v.firstChild,R=f.substring(0,h.startIndex-N),S=f.substring(h.endIndex-N);if(R){const g=document.createTextNode(R);c.insertBefore(g,n)}c.insertBefore(F,n);const w=F.querySelector(".field-content");if(w&&!w.hasAttribute("data-listeners-added")&&(w.addEventListener("input",function(){if(this.textContent.trim()===""){this.textContent="***";const g=document.createRange(),x=window.getSelection();g.selectNodeContents(this),x.removeAllRanges(),x.addRange(g)}}),w.addEventListener("focus",function(){this.textContent.trim()==="***"&&setTimeout(()=>{const g=document.createRange(),x=window.getSelection();g.selectNodeContents(this),x.removeAllRanges(),x.addRange(g)},1)}),w.addEventListener("blur",function(){this.textContent.trim()===""&&(this.textContent="***")}),w.addEventListener("paste",function(g){g.stopPropagation();const x=window.getSelection();if(x.rangeCount>0){const T=x.getRangeAt(0),D=(g.clipboardData||window.clipboardData).getData("text/plain");T.deleteContents();const b=document.createTextNode(D);T.insertNode(b),T.setStartAfter(b),T.setEndAfter(b),x.removeAllRanges(),x.addRange(T)}g.preventDefault()}),w.setAttribute("data-listeners-added","true")),S===""||S.charAt(0)!==" "){const g=document.createTextNode("â€‹");c.insertBefore(g,n)}f=S,N=h.endIndex}),f?n.textContent=f:c.removeChild(n)}}),r&&setTimeout(()=>{try{if(t.focus(),s){const n=window.getSelection();n.removeAllRanges(),n.addRange(s)}else l&&t.setSelection(l.index,l.length,"silent")}catch(n){console.log("Could not restore cursor position:",n),t.focus()}},1),setTimeout(()=>{y=!1,console.log("Styling application complete")},10)}function k(t,o){const l=`field-${Date.now()}-${Math.random().toString(36).substr(2,9)}`;o=o||"***";const r=`<span class="field-component" data-field-text="[field: ${t}][/field]" data-field-name="${t}" id="${l}" contenteditable="false" style="display: inline-block; background: #fefce8; border: 1px solid #eab308; border-radius: 4px; padding: 2px 6px 4px 6px; margin: 0 2px; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; cursor: default; vertical-align: baseline; line-height: 1.2; isolation: isolate;">
            <span class="field-content" style="display: block; font-size: 1em; color: #92400e; font-weight: 500; line-height: 1; word-wrap: break-word; white-space: pre-wrap; cursor: text; outline: none; caret-color: #92400e;" contenteditable="true">${o}</span>
        </span>`;return console.log("Generated field HTML:",r),r}function L(t,o){const l=`aifield-${Date.now()}-${Math.random().toString(36).substr(2,9)}`;o=o||"{auto-generated field}";const r=`<span class="aifield-component" data-field-text="[aifield: ${t}][/aifield]" data-field-name="${t}" id="${l}" contenteditable="false" style="display: inline-block; background: #dbeafe; border: 1px solid #3b82f6; border-radius: 4px; padding: 2px 6px 4px 6px; margin: 0 2px; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; cursor: default; vertical-align: baseline; line-height: 1.2; isolation: isolate;">
            <span class="field-content" style="display: block; font-size: 1em; color: #1e40af; font-weight: 500; line-height: 1; word-wrap: break-word; white-space: pre-wrap; cursor: text; outline: none; caret-color: #1e40af;" contenteditable="true">${o}</span>
        </span>`;return console.log("Generated AI field HTML:",r),r}function O(){const t=C;if(!t)return console.warn("No Quill instance found for parsing"),"";const o=t.container.querySelector(".ql-editor");if(!o)return console.warn("No editor element found for parsing"),t.getText();const l=o.cloneNode(!0);l.querySelectorAll(".field-component, .aifield-component").forEach(p=>{const n=p.getAttribute("data-field-name"),m=p.querySelector(".field-content"),d=m?m.textContent:"",i=p.classList.contains("aifield-component")?`[aifield: ${n}]${d}[/aifield]`:`[field: ${n}]${d}[/field]`,c=document.createTextNode(i);p.parentNode.replaceChild(c,p)});let s=l.innerHTML;s=s.replace(/<br\s*\/?>/gi,`
`),s=s.replace(/<\/p>/gi,`
`),s=s.replace(/<p[^>]*>/gi,""),s=s.replace(/<div[^>]*>/gi,""),s=s.replace(/<\/div>/gi,`
`);const a=document.createElement("div");a.innerHTML=s;let u=a.textContent||a.innerText||"";return u=u.replace(/\n\s*\n\s*\n/g,`

`),u=u.trim(),u}function $(t=!1){const o=document.querySelectorAll(".field-content"),l=C,r=l?l.container.querySelector(".ql-editor"):document.querySelector(".ql-editor"),s=[];if(r){const e=document.createTreeWalker(r,NodeFilter.SHOW_TEXT,{acceptNode:function(c){return c.textContent.includes("***")&&!c.parentElement.closest(".field-component, .aifield-component")?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_REJECT}},!1);let i;for(;i=e.nextNode();){const c=i.textContent;let f;const N=/\*\*\*/g;for(;(f=N.exec(c))!==null;)s.push({textNode:i,startOffset:f.index,endOffset:f.index+3})}}const a=[];if(o.forEach(e=>{a.push({type:"field",element:e,position:A(e)})}),s.forEach(e=>{a.push({type:"asterisk",textNode:e.textNode,startOffset:e.startOffset,endOffset:e.endOffset,position:A(e.textNode)})}),a.length===0)return!1;a.sort((e,i)=>e.position-i.position);const u=document.activeElement,p=window.getSelection();let n=-1;if(u&&u.classList.contains("field-content"))n=a.findIndex(e=>e.type==="field"&&e.element===u);else if(p.rangeCount>0){const e=p.getRangeAt(0),i=e.startContainer,c=e.startOffset;n=a.findIndex(f=>f.type==="asterisk"&&f.textNode===i&&c>=f.startOffset&&c<=f.endOffset)}let m;n===-1?m=t?a.length-1:0:t?m=(n-1+a.length)%a.length:m=(n+1)%a.length;const d=a[m];if(d){if(d.type==="field")d.element.focus(),setTimeout(()=>{const e=document.createRange(),i=window.getSelection();d.element.textContent.trim()==="***"?e.selectNodeContents(d.element):(e.selectNodeContents(d.element),e.collapse(!1)),i.removeAllRanges(),i.addRange(e)},1);else if(d.type==="asterisk"){const e=document.createRange(),i=window.getSelection();e.setStart(d.textNode,d.startOffset),e.setEnd(d.textNode,d.endOffset),i.removeAllRanges(),i.addRange(e),l&&l.focus()}return!0}return!1}function A(t){let o=0;const l=document.createTreeWalker(document.body,NodeFilter.SHOW_ALL,null,!1);let r;for(;r=l.nextNode();){if(r===t)return o;o++}return o}function M(){document.readyState==="loading"?document.addEventListener("DOMContentLoaded",function(){setTimeout(E,100)}):setTimeout(E,100)}window.applyFieldStyling=q,window.parseQuillTextWithFields=O,window.navigateToNextField=$,M()})();
