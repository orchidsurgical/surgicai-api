name: Build and Push to ECR

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  SEMVER_MAJOR_MINOR: v0.1

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::412383733552:role/orchid-automation-role

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: operativeai-app
        run: |
          #!/bin/bash
          SEMVER_TAG="${SEMVER_MAJOR_MINOR}.${{ github.run_number }}"
          docker build -t $ECR_REPOSITORY:latest --target prod .
          # Tag latest
          docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          # Tag build number based semver tag
          docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:$SEMVER_TAG
          for tagToPush in latest $SEMVER_TAG; do
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$tagToPush
          done

      - name: Output build tags
        id: output-build-tags
        run: |
          echo "${SEMVER_MAJOR_MINOR}.${{ github.run_number }}, latest"
          echo "::set-output name=latestBuildVersion::${SEMVER_MAJOR_MINOR}.${{ github.run_number }}"
